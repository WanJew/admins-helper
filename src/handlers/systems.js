let { MessageEmbed, MessageActionRow, MessageButton } = require('discord.js')
const axios = require('axios');
const { use } = require('express/lib/application');


class Systems{
    buttons = async (client, interaction) =>{
        if (interaction.isButton()){
            if (interaction.customId == 'backRole'){
                
            }
        }
    }
    slashCommand = async (client, interaction) =>{
        let { commandName } = interaction
        if (commandName == 'members'){
            interaction.reply('–ó–∞–≥—Ä—É–∑–∫–∞...')
            let frac = interaction.options.getString('—Ñ—Ä–∞–∫—Ü–∏—è');
            let orgs = [
                { fraction: 'Los-Santos Police Department', id: 'LSPD', uId: '1' },
                { fraction: 'San-Fierro Police Department', id: 'SFPD', uId: '4' },
                { fraction: 'Las-Venturas Police Department', id: 'LVPD', uId: '23' },
                { fraction: 'Red-Country Sheriff\'s Department', id: 'RCSD', uId: '2' },
                { fraction: 'F.B.I', id: 'FBI', uId: '2' },
                { fraction: 'Los-Santos Medical Center', id: 'LSMC', uId: '5' },
                { fraction: 'San-Fierro Medical Center', id: 'SFMC', uId: '8' },
                { fraction: 'Las-Venturas Medical Center', id: 'LVMC', uId: '22' },
                { fraction: '–¢—é—Ä—å–º–∞ —Å—Ç—Ä–æ–≥–æ–≥–æ —Ä–µ–∂–∏–º–∞ LV', id: 'TCR', uId: '7' },
                { fraction: '–ê—Ä–º–∏—è LS', id: 'LSA', uId: '20' },
                { fraction: '–ê—Ä–º–∏—è SF', id: 'SFA', uId: '27' },
                { fraction: 'TV –°—Ç—É–¥–∏—è LS', id: 'TVLS', uId: '10' },
                { fraction: 'TV –°—Ç—É–¥–∏—è LV', id: 'TVLV', uId: '24' },
                { fraction: 'TV –°—Ç—É–¥–∏—è SF', id: 'TVSF', uId: '26' },
                { fraction: '–ü—Ä–∞–≤–∏—Ç–µ–ª—å—Å—Ç–≤–æ LS', id: 'GOV', uId: '6' },
                { fraction: '–ê–≤—Ç–æ—à–∫–æ–ª–∞ SF', id: 'GCL', uId: '9' },
                { fraction: '–¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –ë–∞–Ω–∫', id: 'FRS', uId: '21' },
                { fraction: '–°—Ç—Ä–∞—Ö–æ–≤–∞—è –ö–æ–º–ø–∞–Ω–∏—è', id: 'STK', uId: '29' },
                { fraction: 'Grove', id: 'Grove', uId: '11' },
                { fraction: 'Vagos', id: 'Vagos', uId: '12' },
                { fraction: 'Ballas', id: 'Ballas', uId: '13' },
                { fraction: 'Aztec', id: 'Aztec', uId: '14' },
                { fraction: 'Rifa', id: 'Rifa', uId: '15' },
                { fraction: 'Russian Mafia', id: 'RM', uId: '16' },
                { fraction: 'Yakuza', id: 'Yakuza', uId: '17' },
                { fraction: 'La Cosa Nostra', id: 'LCN', uId: '18' },
                { fraction: 'Warlock MC', id: 'Warlock', uId: '19' },
                { fraction: 'Night Wolves', id: 'NW', uId: '25' },
            ]
            let fractionId = 0;
            for (let i = 0; i < orgs.length; i++){
                if (frac == orgs[i].id){
                    fractionId = orgs[i].uId 
                }
            }
            let uri = `https://api.vprikol.tech/online?code=XdyzKDeIR0Wtmvx4qmQLT8FpCsfUgnHB&fraction_id=${fractionId}&server=14`
            let url = encodeURI(uri)
            await axios.get(url).then(async response =>{
                let data = response.data
                let deputies = []
                let leader = []
                for (let i = 0; i < data.players.length; i++){
                    if (data.players[i].rank == '9' || data.players[i].rank == '10'){
                        deputies.push({
                            rank: data.players[i].rank,
                            rankLabel: data.players[i].rankLabel,
                            nick: data.players[i].name, 
                            id: data.players[i].id,
                            isOnline: data.players[i].isOnline,
                        })
                    }
                }
                let embed = new MessageEmbed()
                .setAuthor({
                    name: `–°–∏—Å—Ç–µ–º–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏`,
                    iconURL: client.user.displayAvatarURL(),
                    // url: `http://ulog.union-u.net/nickname.php?iddb=${deputies.find(m => m.rank == '10').id}&server=22`,
                })
                .setThumbnail(interaction.member.displayAvatarURL())
                .addFields(
                    { name: '–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏:', value: `\`${data.fractionLabel}\``, inline: true },
                    { name: '–õ–∏–¥–µ—Ä –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏:', value: `\`${data.leaderNick}\``, inline: true },
                    { name: '–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ–± –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏:', value: `\`üü° –í—Å–µ–≥–æ —á–ª–µ–Ω–æ–≤ —Ñ—Ä–∞–∫—Ü–∏–∏: ${data.totalPlayers}\nüü¢ –û–Ω–ª–∞–π–Ω —Ñ—Ä–∞–∫—Ü–∏–∏: ${data.totalOnline}\``},
                )
                .setColor('ORANGE')
                deputies.map(m => embed.addFields({ name: `${m.nick}`, value: `\`–†–∞–Ω–≥: ${m.rankLabel==null?'–ù–µ –Ω–∞–π–¥–µ–Ω.':m.rankLabel} [${m.rank}]\nID: ${m.id==null?'–ù–µ –Ω–∞–π–¥–µ–Ω.':`${m.id}`}\n${m.isOnline?'üü¢ –í —Å–µ—Ç–∏':'üî¥ –ù–µ –≤ —Å–µ—Ç–∏'}\``, inline: true }))
                interaction.editReply({
                    content: ' ',
                    embeds: [embed]
                })
            })
            .catch(async e =>{
                await interaction.reply({embeds: [new MessageEmbed().setTitle('–û—à–∏–±–∫–∞!').setColor('RED').setDescription(`\`\`\`${e}\`\`\``)]})
            })
        }
        if (commandName == 'check'){
            if (commandName == 'check'){
                function numberWithCommas(x) {
                    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
                }
                let nickname = interaction.options.getString('–Ω–∏–∫–Ω–µ–π–º');
                interaction.reply({
                    ephemeral: true,
                    embeds: [new MessageEmbed()
                        .setAuthor({
                            name: `–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Arizona RP`,
                            iconURL: client.user.displayAvatarURL(),
                        })
                        .setDescription(`**‚åõ –ò–¥–µ—Ç –ø–æ–∏—Å–∫ –≤ –ë–î –ø–æ –Ω–∏–∫—É ${nickname}**`)
                        .setColor('ORANGE')
                    ]
                })
                let uri = `https://api.vprikol.tech/find?token=XdyzKDeIR0Wtmvx4qmQLT8FpCsfUgnHB&server=14&nick=${nickname}`
                let url = encodeURI(uri)
                let nick = nickname.replace('_', ' ')
                await axios.get(url).then(async response =>{
                    let data = response.data
                    if (data == 'Internal Server Erorr'){
                        let embed = new MessageEmbed()
                        .setAuthor({
                            name: `–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Arizona RP`,
                            iconURL: client.user.displayAvatarURL(),
                        })
                        .setColor('RED')
                        embed.setDescription(`**‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —á–µ—Ä–µ–∑ —Å–∞–π—Ç.**\n\`\`\`${error}\`\`\``)
                        return interaction.reply({
                            embeds: [embed]
                        })
                    }
                    let user = interaction.member.guild.members.cache.find(user => user.displayName.toLowerCase().includes(nickname.toLowerCase()) || user.displayName.toLowerCase().includes(nick.toLowerCase()))
                    await interaction.channel.send({
                        content: ' ',
                        embeds: [new MessageEmbed()
                            .setAuthor({
                                name: `–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Arizona RP`,
                                iconURL: client.user.displayAvatarURL(),
                            })
                            .setDescription(`**„Äå‚úÖ„Äç: –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä: ${interaction.member}\n„Äå‚ùì„Äç: –ü—Ä–µ–¥–ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã–π DISCORD: ${user?user:'–ù–µ –Ω–∞–π–¥–µ–Ω.'}\n\n„Äåüåπ„Äç: –ù–∏–∫-–Ω–µ–π–º: \`${nickname}\`\n„Äå‚úâÔ∏è„Äç: –°—Ç–∞—Ç—É—Å: \`${data.isOnline?'üü¢ –í —Å–µ—Ç–∏':'üî¥ –ù–µ –≤ —Å–µ—Ç–∏'}\`\n„Äå‚ú®„Äç: –£—Ä–æ–≤–µ–Ω—å –∞–∫–∫–∞—É–Ω—Ç–∞: \`${data.lvl}\`\n„Äåüíµ„Äç: –ù–∞–ª–∏—á–Ω—ã—Ö –¥–µ–Ω–µ–≥: \`$${numberWithCommas(data.cash)}\`\n„Äåüè¶„Äç: –î–µ–Ω–µ–≥ –≤ –±–∞–Ω–∫–µ: \`$${numberWithCommas(data.bank)}\`\n„Äåüí∏„Äç: –î–µ–ø–æ–∑–∏—Ç: \`$${numberWithCommas(data.deposit)}\`\n„Äå‚öíÔ∏è„Äç: –†–∞–±–æ—Ç–∞: \`${data.work}\`\n„Äå‚õèÔ∏è„Äç: –û—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è: \`${data.org==null?'–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç':`${data.org} [${data.rank}]`}\`\n„Äåüíé„Äç: –°—Ç–∞—Ç—É—Å VIP: \`${data.vip==null?'–û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç':`${data.vip}`}\`**`)
                            .setColor('GREEN')
                        ]
                    })
                    return
                }).catch(error => {
                    let embed = new MessageEmbed()
                    .setAuthor({
                        name: `–ü–æ–∏—Å–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö Arizona RP`,
                        iconURL: client.user.displayAvatarURL(),
                    })
                    .setColor('RED')
                    if (error == 'Error: Request failed with status code 404'){
                        embed.setDescription(`**‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${nickname} –Ω–µ –±—ã–ª –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.**`)
                    } else {
                        embed.setDescription(`**‚ùå –ü—Ä–æ–±–ª–µ–º–∞ –Ω–∞ —Å—Ç–æ—Ä–æ–Ω–µ API. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å–∞–º–æ—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —á–µ—Ä–µ–∑ —Å–∞–π—Ç.**\n\`\`\`${error}\`\`\``)
                    }
                    console.log(error)
                    interaction.channel.send({
                        embeds: [embed]
                    })
                })
            }
        }
        if (commandName == 'notif'){
            let msg = interaction.options.getString('–∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π');
            let user = interaction.options.getUser('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
            let embed = new MessageEmbed()
            .setAuthor({
                name: `–õ–∏—á–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ ${interaction.member.displayName}`,
                iconURL: client.user.displayAvatarURL(),
            })
            .setColor('ORANGE')
            .addFields(
                { name: '> –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä', value: `${interaction.member}`, inline: true },
                { name: '> –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å', value: `${user}`, inline: true },
                { name: '> –°–æ–æ–±—â–µ–Ω–∏–µ', value: `\`\`\`${msg}\`\`\`` },
            )
            user.send({
                embeds: [embed]
            }).catch(e => interaction.channel.send(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.\n\`\`\`${e}\`\`\``))
            interaction.reply({content: '–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!', ephemeral: true, embeds: [embed]}).catch(e => interaction.channel.send(`–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è.\n\`\`\`${e}\`\`\``))
        }
        if (commandName == 'rrole'){
            let user = interaction.options.getUser('–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å');
            let member = interaction.member.guild.members.cache.get(user.id)
            let length = member._roles.length
            let roles = []
            for (let i = 0; i < member._roles.length; i++){
                roles.push(member._roles[i])
                member.roles.remove(member._roles[i])
            }
            interaction.reply({
                content: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é ${user} –±—ã–ª–æ —Å–Ω—è—Ç–æ \`${length} —Ä–æ–ª–µ–π.\``,
                // components: [new MessageActionRow()
                //     .addComponents(
                //         [new MessageButton()
                //             .setCustomId('backRole')
                //             .setLabel('–í–µ—Ä–Ω—É—Ç—å —Ä–æ–ª–∏')
                //             .setStyle('SUCCESS')
                //         ]
                //     )
                // ]
            })
        }
        if (commandName == 'run'){
            if (interaction.member.id == '511116975456387092'){
                let code = interaction.options.getString('–∫–æ–¥');
                try {
                    eval(code)
                } catch (error) {
                    console.log(error)
                }
            } else return interaction.reply({content: '–ù–µ-–∞.', ephemeral: true})
        }
        if (commandName == 'online'){
            const guild = await client.guilds.cache.get('772869388147490846')
            const fetch = require("node-fetch");
            const fetchedData = await fetch("https://arizona-ping.react.group/desktop/ping/Arizona/ping.json").then((res) => res.json());
            const serverinfo = fetchedData.query.find(x => x.number == '14')

            await interaction.reply({ embeds: [new MessageEmbed()
                .setAuthor({
                    name: `–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–µ—Ä–µ Arizona RP Winslow`,
                    iconURL: client.user.displayAvatarURL(),
                  })
                .setColor('GREEN')
                .setThumbnail(guild.iconURL())
                .setTimestamp()
                .setFooter('–ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ')
                .setDescription(`**–û–±—â–∏–π –æ–Ω–ª–∞–π–Ω: \`${serverinfo.online}/1000\`\nIP: ${serverinfo.ip}:${serverinfo.port}**`)
            ] });
        }
    }
}

module.exports = new Systems()